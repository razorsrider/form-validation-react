{"version":3,"sources":["Components/Input.js","Components/InputDate.js","Components/SelectBox.js","Components/Phone.js","Components/Button.js","Components/Email.js","Form.js","index.js"],"names":["inputText","className","id","this","props","fieldName","type","errorClass","placeholder","value","onChange","e","field","target","htmlFor","errorText","length","React","Component","inputDate","_onFocus","currentTarget","_onBlur","onFocus","onBlur","selectBox","disabled","Phone","mask","maskChar","Button","Email","name","Form","handleSubmit","event","preventDefault","fieldValidationErrors","state","formErrors","requiredField","form","document","forms","my","surname","elements","date","fatherName","gender","phone","email","address","employer","emailValid","match","setState","errors","each","alert","handleChange","bind","console","log","stateObject","returnObj","error","onSubmit","Input","SelectBox","InputDate","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.7b824622.chunk.js","sourcesContent":["import React from \"react\";\nimport './styles/input.css';\n\nclass inputText extends React.Component {\n    render() {\n        return (\n\n            <div className={'col-12'}>\n                <div className={'form-label-group'}>\n                    <input id={this.props.fieldName} type=\"text\"\n                           className={`form-control ${this.props.errorClass}`}\n                           placeholder={this.props.placeholder}\n                           value={this.props.value}\n                           onChange={((e) => this.props.onChange({field: this.props.fieldName,value: e.target.value}))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\nexport default inputText;","import React from \"react\";\nimport './styles/inputDate.css';\n\nclass inputDate extends React.Component {\n\n    _onFocus = (e) => {\n        e.currentTarget.type = \"date\";\n    }\n\n    _onBlur = (e) => {\n        e.currentTarget.type = \"text\";\n        e.currentTarget.placeholder = this.props.placeholder;\n    }\n\n    render() {\n        return (\n\n            <div className={'col-6'}>\n                <div className={'form-label-group'}>\n                    <input id={this.props.fieldName} type=\"text\" placeholder={this.props.placeholder}\n                           className={`form-control ${this.props.errorClass}`}\n                           onFocus={this._onFocus} onBlur={this._onBlur}\n                           value={this.props.value}\n                           onChange={((e) => this.props.onChange({field: this.props.fieldName, value: e.target.value}))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\nexport default inputDate;","import React from \"react\";\nimport './styles/selectBox.css';\n\nclass selectBox extends React.Component {\n    render() {\n        return (\n\n            <div className={'col-6'}>\n                <select id={this.props.fieldName} className={'form-control'}\n                        onChange={((e) => this.props.onChange({field: this.props.fieldName, value: e.target.value}))}>\n                    <option value='' disabled>Пол</option>\n                    <option value='Мужской'>Мужской</option>\n                    <option value='Женский'>Женский</option>\n                </select>\n            </div>\n\n        )\n    }\n}\n\nexport default selectBox;","import React from \"react\";\nimport InputMask from 'react-input-mask';\nimport './styles/phone.css';\n\nclass Phone extends React.Component {\n    render() {\n\n        return (\n\n            <div className={'col-6'}>\n                <div className={'form-label-group'}>\n                    <InputMask mask=\"+7 999 999 99 99\" id={this.props.fieldName} type=\"tel\"\n                               placeholder={this.props.placeholder}\n                               className={`form-control ${this.props.errorClass}`} maskChar=\" \"\n                               value={this.props.value}\n                               onChange={((e) => this.props.onChange({\n                                   field: this.props.fieldName,\n                                   value: e.target.value\n                               }))}\n                    />\n                    <label htmlFor={this.props.fieldName}>Мобильный телефон</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\nexport default Phone;","import React from \"react\";\nimport './styles/button.css';\n\nconst Button = () => {\n\n    return (\n\n        <div className={'col-6 offset-6'}>\n            <input type=\"submit\" value={'СОХРАНИТЬ'} className={'form-control'}/>\n        </div>\n\n    )\n}\n\nexport default Button;","import React from \"react\";\n\nclass Email extends React.Component {\n    render() {\n        return (\n\n            <div className={`col-6`}>\n                <div className={'form-label-group'}>\n                    <input name={this.props.fieldName} type=\"text\"\n                           className={`form-control ${this.props.errorClass}`}\n                           placeholder={this.props.placeholder}\n                           value={this.props.value}\n                           onChange={((e) => this.props.onChange({field: this.props.fieldName, value: e.target.value}))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\nexport default Email;","import React, {Component} from \"react\";\nimport InputText from \"./Components/Input.js\";\nimport InputDate from \"./Components/InputDate.js\";\nimport SelectBox from \"./Components/SelectBox.js\";\nimport Phone from \"./Components/Phone.js\";\nimport Button from \"./Components/Button.js\";\nimport Email from \"./Components/Email.js\";\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formErrors: {email: '', phone: '', date: '', name: '', surname: ''},\n            surname: '',\n            name: '',\n            fatherName: '',\n            gender: '',\n            date: '',\n            phone: '',\n            email: '',\n            address: '',\n            employer: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        console.log('handleChange', event);\n\n        const stateObject = function () {\n            const returnObj = {};\n            returnObj[this.field] = this.value;\n            return returnObj;\n        }.bind(event)();\n\n        this.setState(stateObject);\n    }\n\n    // handleSubmit1(event) {\n    //     event.preventDefault();\n    //     alert('A name was submitted: ' + this.state.value);\n    // }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let fieldValidationErrors = this.state.formErrors;\n        const requiredField = 'Поле является обязательным';\n        const incorrectField = 'Введен некорректный адрес почты';\n\n        const form = document.forms.my;\n        const surname = form.elements.surname.value;\n        const name = form.elements.name.value;\n        const fatherName = form.elements.fatherName.value;\n        const gender = form.elements.gender.value;\n        const date = form.elements.date.value;\n        const phone = form.elements.phone.value;\n        const email = form.elements.email.value;\n        const address = form.elements.address.value;\n        const employer = form.elements.employer.value;\n\n        if (!surname.length) {\n            fieldValidationErrors.surname = requiredField;\n        } else {\n            fieldValidationErrors.surname = '';\n        }\n\n        if (!name.length) {\n            fieldValidationErrors.name = requiredField;\n        } else {\n            fieldValidationErrors.name = '';\n        }\n\n        if (!date.length) {\n            fieldValidationErrors.date = requiredField;\n        } else {\n            fieldValidationErrors.date = '';\n        }\n\n        if (!phone.length) {\n            fieldValidationErrors.phone = requiredField;\n        } else {\n            fieldValidationErrors.phone = '';\n        }\n\n        if (!email.length) {\n            fieldValidationErrors.email = requiredField;\n        } else {\n            let emailValid = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            if (!emailValid) {\n                fieldValidationErrors.email = incorrectField;\n            } else {\n                fieldValidationErrors.email = '';\n            }\n        }\n\n        this.setState({\n            formErrors: fieldValidationErrors\n        });\n\n        let errors = false;\n        for (let each in fieldValidationErrors) {\n            if (fieldValidationErrors[each].length) {\n                errors = true;\n                break;\n            }\n        }\n\n        if (!errors) {\n            alert('Форма валидна, отправляется запрос');\n        }\n    }\n\n    errorClass(error) {\n        return (error.length ? 'red-border' : '');\n    }\n\n    render() {\n        return (\n            <div>\n\n                <form onSubmit={this.handleSubmit} name={'my'}>\n                    <div className={'row'}>\n\n                        <InputText fieldName={'surname'}\n                                   value={this.state.surname}\n                                   onChange={this.handleChange}\n                                   errorClass={this.errorClass(this.state.formErrors.surname)}\n                                   errorText={this.state.formErrors.surname} placeholder={'Фамилия'}/>\n\n                        <InputText fieldName={'name'}\n                                   value={this.state.name}\n                                   onChange={this.handleChange}\n                                   errorClass={this.errorClass(this.state.formErrors.name)}\n                                   errorText={this.state.formErrors.name} placeholder={'Имя'}/>\n\n                        <InputText fieldName={'fatherName'}\n                                   value={this.state.fatherName}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Отчество'}/>\n\n                        <SelectBox fieldName={'gender'} onChange={this.handleChange}/>\n\n                        <InputDate fieldName={'date'}\n                                   value={this.state.date}\n                                   onChange={this.handleChange}\n                                   placeholder={'Дата рождения'}\n                                   errorClass={this.errorClass(this.state.formErrors.date)}\n                                   errorText={this.state.formErrors.date}/>\n\n                        <Phone fieldName={'phone'}\n                               value={this.state.phone}\n                               onChange={this.handleChange}\n                               errorClass={this.errorClass(this.state.formErrors.phone)}\n                               errorText={this.state.formErrors.phone} placeholder={'Фамилия'}/>\n\n                        <Email fieldName={'email'}\n                               value={this.state.email}\n                               onChange={this.handleChange}\n                               errorClass={this.errorClass(this.state.formErrors.email)}\n                               errorText={this.state.formErrors.email} placeholder={'Email (необязательно)'}/>\n\n                        <InputText fieldName={'address'}\n                                   value={this.state.address}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Адрес постоянной регистрации'}/>\n\n                        <InputText fieldName={'employer'}\n                                   value={this.state.employer}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Название работодателя'}/>\n\n                        <Button/>\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Form;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Form from './Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className='App'>\n                <div className={'container-fluid'}>\n                    <div className={'row'}>\n                        <div className={'col-6 offset-3'}>\n                            <h4 className={'mb-3'}>Информация о сотруднике</h4>\n                            <Form/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}