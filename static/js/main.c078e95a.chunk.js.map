{"version":3,"sources":["Components/Input.js","Components/InputDate.js","Components/SelectBox.js","Components/Phone.js","Components/Button.js","Components/Email.js","FormExample.js","index.js"],"names":["inputText","className","Form","Control","id","this","props","fieldName","type","errorClass","placeholder","value","onChange","e","field","target","htmlFor","errorText","length","React","Component","inputDate","_onFocus","currentTarget","_onBlur","onFocus","onBlur","propTypes","PropTypes","string","selectBox","as","custom","defaultValue","disabled","Phone","mask","maskChar","Button","Email","name","FormExample","handleSubmit","event","preventDefault","fieldValidationErrors","state","formErrors","requiredField","surname","date","phone","email","emailValid","match","setState","errors","each","alert","fatherName","gender","address","employer","handleChange","bind","stateObject","returnObj","error","onSubmit","Input","SelectBox","InputDate","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c078e95a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport './styles/input.css';\nimport {Form} from \"react-bootstrap\";\n\nclass inputText extends React.Component {\n    render() {\n        return (\n\n            <div className={'col-12'}>\n                <div className={'form-label-group'}>\n                    <Form.Control id={this.props.fieldName} type=\"text\"\n                                  className={`form-control ${this.props.errorClass}`}\n                                  placeholder={this.props.placeholder}\n                                  value={this.props.value}\n                                  onChange={((e) => this.props.onChange({\n                                      field: this.props.fieldName,\n                                      value: e.target.value\n                                  }))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\ninputText.propTypes = {\n    fieldName: PropTypes.string,\n    placeholder: PropTypes.string,\n    value: PropTypes.string\n};\n\nexport default inputText;","import React from \"react\";\nimport './styles/inputDate.css';\nimport PropTypes from \"prop-types\";\nimport inputText from \"./Input\";\nimport {Form} from \"react-bootstrap\";\n\nclass inputDate extends React.Component {\n\n    _onFocus = (e) => {\n        e.currentTarget.type = \"date\";\n    }\n\n    _onBlur = (e) => {\n        e.currentTarget.type = \"text\";\n        e.currentTarget.placeholder = this.props.placeholder;\n    }\n\n    render() {\n        return (\n\n            <div className={'col-6'}>\n                <div className={'form-label-group'}>\n                    <Form.Control id={this.props.fieldName} type=\"text\" placeholder={this.props.placeholder}\n                           className={`form-control ${this.props.errorClass}`}\n                           onFocus={this._onFocus} onBlur={this._onBlur}\n                           value={this.props.value}\n                           onChange={((e) => this.props.onChange({field: this.props.fieldName, value: e.target.value}))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\ninputText.propTypes = {\n    fieldName: PropTypes.string,\n    placeholder: PropTypes.string,\n    errorClass: PropTypes.string,\n    errorText: PropTypes.string\n};\n\n\nexport default inputDate;","import React from \"react\";\nimport './styles/selectBox.css';\nimport PropTypes from \"prop-types\";\nimport inputText from \"./Input\";\nimport {Form} from \"react-bootstrap\";\n\nclass selectBox extends React.Component {\n    render() {\n        return (\n\n            <div className={'col-6'}>\n                <Form.Control as=\"select\" custom id={this.props.fieldName} className={'form-control'}\n                              defaultValue={this.props.value}\n                              onChange={((e) => this.props.onChange({\n                                  field: this.props.fieldName,\n                                  value: e.target.value\n                              }))}>\n                    <option value='default' disabled>Пол</option>\n                    <option value='Мужской'>Мужской</option>\n                    <option value='Женский'>Женский</option>\n                </Form.Control>\n            </div>\n\n        )\n    }\n}\n\ninputText.propTypes = {\n    fieldName: PropTypes.string\n};\n\nexport default selectBox;","import React from \"react\";\nimport InputMask from 'react-input-mask';\nimport './styles/phone.css';\nimport inputText from \"./Input\";\nimport PropTypes from \"prop-types\";\n\nclass Phone extends React.Component {\n    render() {\n\n        return (\n\n            <div className={'col-6'}>\n                <div className={'form-label-group'}>\n                    <InputMask mask=\"+7 999 999 99 99\" id={this.props.fieldName} type=\"tel\"\n                               placeholder={this.props.placeholder}\n                               className={`form-control ${this.props.errorClass}`} maskChar=\" \"\n                               value={this.props.value}\n                               onChange={((e) => this.props.onChange({\n                                   field: this.props.fieldName,\n                                   value: e.target.value\n                               }))}\n                    />\n                    <label htmlFor={this.props.fieldName}>Мобильный телефон</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\ninputText.propTypes = {\n    fieldName: PropTypes.string,\n    placeholder: PropTypes.string,\n    errorClass: PropTypes.string,\n    errorText: PropTypes.string\n};\n\nexport default Phone;","import React from \"react\";\nimport './styles/button.css';\n\nconst Button = () => {\n\n    return (\n\n        <div className={'col-6 offset-6'}>\n            <input type=\"submit\" value={'СОХРАНИТЬ'} className={'form-control'}/>\n        </div>\n\n    )\n}\n\nexport default Button;","import React from \"react\";\nimport inputText from \"./Input\";\nimport PropTypes from \"prop-types\";\nimport {Form} from \"react-bootstrap\";\n\nclass Email extends React.Component {\n    render() {\n        return (\n\n            <div className={`col-6`}>\n                <div className={'form-label-group'}>\n                    <Form.Control name={this.props.fieldName} type=\"text\"\n                                  className={`form-control ${this.props.errorClass}`}\n                                  placeholder={this.props.placeholder}\n                                  value={this.props.value}\n                                  onChange={((e) => this.props.onChange({\n                                      field: this.props.fieldName,\n                                      value: e.target.value\n                                  }))}\n                    />\n                    <label htmlFor={this.props.fieldName}>{this.props.placeholder}</label>\n                </div>\n                {this.props.errorText.length ?\n                    <p className={'errorText'}>{this.props.errorText}</p> : ''}\n            </div>\n\n        )\n    }\n}\n\ninputText.propTypes = {\n    fieldName: PropTypes.string,\n    placeholder: PropTypes.string,\n    errorClass: PropTypes.string,\n    errorText: PropTypes.string\n};\n\nexport default Email;","import React, {Component} from \"react\";\nimport InputText from \"./Components/Input.js\";\nimport InputDate from \"./Components/InputDate.js\";\nimport SelectBox from \"./Components/SelectBox.js\";\nimport Phone from \"./Components/Phone.js\";\nimport Button from \"./Components/Button.js\";\nimport Email from \"./Components/Email.js\";\nimport {Form} from \"react-bootstrap\";\n\nclass FormExample extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formErrors: {email: '', phone: '', date: '', name: '', surname: ''},\n            surname: '',\n            name: '',\n            fatherName: '',\n            gender: 'default',\n            date: '',\n            phone: '',\n            email: '',\n            address: '',\n            employer: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const stateObject = function () {\n            const returnObj = {};\n            returnObj[this.field] = this.value;\n            return returnObj;\n        }.bind(event)();\n        // console.log('stateObject', stateObject);\n        this.setState(stateObject);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let fieldValidationErrors = this.state.formErrors;\n        const requiredField = 'Поле является обязательным';\n        const incorrectField = 'Введен некорректный адрес почты';\n\n\n        // const surname = form.elements.surname.value;\n        const surname = this.state.surname;\n        const name = this.state.name;\n        // const fatherName = this.state.fatherName;\n        // const gender = this.state.gender;\n        const date = this.state.date;\n        const phone = this.state.phone;\n        const email = this.state.email;\n        // const address = this.state.address;\n        // const employer = this.state.employer;\n\n\n\n\n\n\n        if (!surname.length) {\n            fieldValidationErrors.surname = requiredField;\n        } else {\n            fieldValidationErrors.surname = '';\n        }\n\n        if (!name.length) {\n            fieldValidationErrors.name = requiredField;\n        } else {\n            fieldValidationErrors.name = '';\n        }\n\n        if (!date.length) {\n            fieldValidationErrors.date = requiredField;\n        } else {\n            fieldValidationErrors.date = '';\n        }\n\n        if (!phone.length) {\n            fieldValidationErrors.phone = requiredField;\n        } else {\n            fieldValidationErrors.phone = '';\n        }\n\n        if (!email.length) {\n            fieldValidationErrors.email = requiredField;\n        } else {\n            let emailValid = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            if (!emailValid) {\n                fieldValidationErrors.email = incorrectField;\n            } else {\n                fieldValidationErrors.email = '';\n            }\n        }\n\n        this.setState({\n            formErrors: fieldValidationErrors\n        });\n\n        let errors = false;\n        for (let each in fieldValidationErrors) {\n            if (fieldValidationErrors[each].length) {\n                errors = true;\n                break;\n            }\n        }\n\n        if (!errors) {\n            alert('Форма валидна, отправляется запрос');\n        }\n    }\n\n    errorClass(error) {\n        return (error.length ? 'red-border' : '');\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Form onSubmit={this.handleSubmit} name={'my'}>\n                    <div className={'row'}>\n\n                        <InputText fieldName={'surname'}\n                                   value={this.state.surname}\n                                   onChange={this.handleChange}\n                                   errorClass={this.errorClass(this.state.formErrors.surname)}\n                                   errorText={this.state.formErrors.surname} placeholder={'Фамилия'}/>\n\n                        <InputText fieldName={'name'}\n                                   value={this.state.name}\n                                   onChange={this.handleChange}\n                                   errorClass={this.errorClass(this.state.formErrors.name)}\n                                   errorText={this.state.formErrors.name} placeholder={'Имя'}/>\n\n                        <InputText fieldName={'fatherName'}\n                                   value={this.state.fatherName}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Отчество'}/>\n\n                        <SelectBox fieldName={'gender'} value={this.state.gender} onChange={this.handleChange}/>\n\n                        <InputDate fieldName={'date'}\n                                   value={this.state.date}\n                                   onChange={this.handleChange}\n                                   placeholder={'Дата рождения'}\n                                   errorClass={this.errorClass(this.state.formErrors.date)}\n                                   errorText={this.state.formErrors.date}/>\n\n                        <Phone fieldName={'phone'}\n                               value={this.state.phone}\n                               onChange={this.handleChange}\n                               errorClass={this.errorClass(this.state.formErrors.phone)}\n                               errorText={this.state.formErrors.phone} placeholder={'Фамилия'}/>\n\n                        <Email fieldName={'email'}\n                               value={this.state.email}\n                               onChange={this.handleChange}\n                               errorClass={this.errorClass(this.state.formErrors.email)}\n                               errorText={this.state.formErrors.email} placeholder={'Email (необязательно)'}/>\n\n                        <InputText fieldName={'address'}\n                                   value={this.state.address}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Адрес постоянной регистрации'}/>\n\n                        <InputText fieldName={'employer'}\n                                   value={this.state.employer}\n                                   onChange={this.handleChange}\n                                   errorClass={''}\n                                   errorText={''} placeholder={'Название работодателя'}/>\n\n                        <Button/>\n\n                    </div>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nexport default FormExample;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FormExample from './FormExample';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className='App'>\n                <div className={'container-fluid'}>\n                    <div className={'row'}>\n                        <div className={'col-6 offset-3'}>\n                            <h4 className={'mb-3'}>Информация о сотруднике</h4>\n                            <FormExample/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}