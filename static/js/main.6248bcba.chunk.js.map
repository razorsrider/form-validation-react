{"version":3,"sources":["Form.js","index.js"],"names":["Form","props","handleSubmit","event","preventDefault","fieldValidationErrors","state","formErrors","requiredField","form","document","forms","my","surname","elements","value","name","date","fatherName","gender","phone","email","address","employer","length","emailValid","match","setState","errors","each","alert","error","e","currentTarget","type","placeholder","onSubmit","this","className","id","errorClass","htmlFor","disabled","onFocus","_onFocus","onBlur","_onBlur","style","backgroundColor","color","Component","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.6248bcba.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formErrors: {email: '', phone: '', date: '', name: '', surname: ''}\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let fieldValidationErrors = this.state.formErrors;\n        const requiredField = 'Поле является обязательным';\n        const incorrectField = 'Введен некорректный адрес почты';\n\n        const form = document.forms.my;\n\n        const surname = form.elements.surname.value;\n        const name = form.elements.name.value;\n        const fatherName = form.elements.fatherName.value;\n        const gender = form.elements.gender.value;\n        const date = form.elements.date.value;\n        const phone = form.elements.phone.value;\n        const email = form.elements.email.value;\n        const address = form.elements.address.value;\n        const employer = form.elements.employer.value;\n\n        if (!surname.length) {\n            fieldValidationErrors.surname = requiredField;\n        } else {\n            fieldValidationErrors.surname = '';\n        }\n\n        if (!name.length) {\n            fieldValidationErrors.name = requiredField;\n        } else {\n            fieldValidationErrors.name = '';\n        }\n\n        if (!date.length) {\n            fieldValidationErrors.date = requiredField;\n        } else {\n            fieldValidationErrors.date = '';\n        }\n\n        if (!phone.length) {\n            fieldValidationErrors.phone = requiredField;\n        } else {\n            fieldValidationErrors.phone = '';\n        }\n\n        if (!email.length) {\n            fieldValidationErrors.email = requiredField;\n        } else {\n            let emailValid = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            if (!emailValid) {\n                fieldValidationErrors.email = incorrectField;\n            } else {\n                fieldValidationErrors.email = '';\n            }\n        }\n\n        this.setState({\n            formErrors: fieldValidationErrors\n        });\n\n        let errors = false;\n        for (let each in fieldValidationErrors) {\n            if (fieldValidationErrors[each].length) {\n                errors = true;\n                break;\n            }\n        }\n\n        if (!errors) {\n            alert('Форма валидна, отправляется запрос');\n        }\n    }\n\n    errorClass(error) {\n        return (error.length ? 'red-border' : '');\n    }\n\n    _onFocus(e) {\n        e.currentTarget.type = \"date\";\n    }\n\n    _onBlur(e) {\n        e.currentTarget.type = \"text\";\n        e.currentTarget.placeholder = \"Дата рождения\";\n    }\n\n    render() {\n        return (\n            <div>\n\n                <form onSubmit={this.handleSubmit} name={'my'}>\n                    <div className={'row'}>\n\n                        <div className={'col-12'}>\n                            <div className={'form-label-group'}>\n                                <input id={'surname'} type=\"text\"\n                                       className={`form-control ${this.errorClass(this.state.formErrors.surname)}`}\n                                       placeholder={'Фамилия'}/>\n                                <label htmlFor={'surname'}>Фамилия</label>\n                            </div>\n                            {this.state.formErrors.surname.length ?\n                                <p className={'errorText'}>{this.state.formErrors.surname}</p> : ''}\n                        </div>\n\n                        <div className={'col-12'}>\n                            <div className={'form-label-group'}>\n                                <input id={'name'} type=\"text\" placeholder={'Имя'}\n                                       className={`form-control ${this.errorClass(this.state.formErrors.name)}`}/>\n                                <label htmlFor={'Name'}>Имя</label>\n                            </div>\n                            {this.state.formErrors.name.length ?\n                                <p className={'errorText'}>{this.state.formErrors.name}</p> : ''}\n                        </div>\n\n                        <div className={'col-12'}>\n                            <div className={'form-label-group'}>\n                                <input id={'fatherName'} type=\"text\" placeholder={'Отчество'}\n                                       className={'form-control'}/>\n                                <label htmlFor={'FatherName'}>Отчество</label>\n                            </div>\n                        </div>\n\n                        <div className={'col-6'}>\n                            <select id={'gender'} className={'form-control'}>\n                                <option disabled>Пол</option>\n                                <option value='Мужской'>Мужской</option>\n                                <option value='Женский'>Женский</option>\n                            </select>\n                        </div>\n\n                        <div className={'col-6'}>\n                            <div className={'form-label-group'}>\n                                <input id={'date'} type=\"text\" placeholder={'Дата рождения'}\n                                       className={`form-control ${this.errorClass(this.state.formErrors.date)}`}\n                                    onFocus={this._onFocus} onBlur={this._onBlur}\n                                />\n                                <label htmlFor={'FatherName'}>Дата рождения</label>\n                            </div>\n                            {this.state.formErrors.date.length ?\n                                <p className={'errorText'}>{this.state.formErrors.date}</p> : ''}\n                        </div>\n\n\n                        <div className={'col-6'}>\n                            <div className={'form-label-group'}>\n                                <input id={'phone'} type=\"tel\" placeholder={'Мобильный телефон'}\n                                       className={`form-control ${this.errorClass(this.state.formErrors.phone)}`}/>\n                                <label htmlFor={'email'}>Мобильный телефон</label>\n                            </div>\n                            {this.state.formErrors.phone.length ?\n                                <p className={'errorText'}>{this.state.formErrors.phone}</p> : ''}\n                        </div>\n\n                        <div className={`col-6`}>\n                            <div className={'form-label-group'}>\n                                <input name={\"email\"} type=\"text\"\n                                       className={`form-control ${this.errorClass(this.state.formErrors.email)}`}\n                                       placeholder={'Email (необязательно)'}/>\n                                <label htmlFor={'email'}>Email (необязательно)</label>\n                            </div>\n                            {this.state.formErrors.email.length ?\n                                <p className={'errorText'}>{this.state.formErrors.email}</p> : ''}\n                        </div>\n\n                        <div className={'col-12'}>\n                            <div className={'form-label-group'}>\n                                <input id={'address'} type=\"text\" placeholder={'Адрес постоянной регистрации'}\n                                       className={'form-control'}/>\n                                <label htmlFor={'address'}>Адрес постоянной регистрации</label>\n                            </div>\n                        </div>\n\n                        <div className={'col-12'}>\n                            <div className={'form-label-group'}>\n                                <input id={'employer'} type=\"text\" placeholder={'Название работодателя'}\n                                       className={'form-control'}/>\n                                <label htmlFor={'employer'}>Название работодателя</label>\n                            </div>\n                        </div>\n\n                        <div className={'col-6 offset-6'}>\n                            <input type=\"submit\" value={'СОХРАНИТЬ'}\n                                   style={{backgroundColor: '#43b055', color: 'white'}}\n                                   className={'form-control'}/>\n                        </div>\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Form;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './App.css';\nimport Form from './Form';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className='App'>\n                <div className={'container-fluid'}>\n                    <div className={'row'}\n                         // style={{backgroundColor: 'white'}}\n                    >\n                        <div className={'col-6 offset-3'} >\n                            <h4 className={'mb-3'}>Информация о сотруднике</h4>\n                            <Form/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// const App = () => {\n//     return (\n//         <div>\n//             <div className={'container-fluid'}>\n//                 <div className={'row'} style={{backgroundColor: 'white'}}>\n//                     <div className={'col-6 offset-3'} style={{border: '1px solid'}}>\n//                         <h4>Информация о сотруднике</h4>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n\nReactDOM\n    .render(\n        <App/>,\n        document.querySelector('#root')\n    )\n;"],"sourceRoot":""}